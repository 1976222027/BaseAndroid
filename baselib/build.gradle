apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
// 生成R2类插件
apply plugin: 'com.jakewharton.butterknife'
android {
    dataBinding {
        enabled = true
    }
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion


    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }


}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    // 约束布局
    api 'com.android.support.constraint:constraint-layout:' + rootProject.ext.constraintVersion
    //appcompat-v7
    api 'com.android.support:appcompat-v7:' + rootProject.ext.supportLibVersion
    api 'com.android.support:design:' + rootProject.ext.supportLibVersion
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    api 'com.android.support.constraint:constraint-layout:' + rootProject.ext.constraintVersion
    testImplementation 'junit:junit:4.12'
    //Fragment依赖 地址 https://github.com/YoKeyword/Fragmentation
    api 'me.yokeyword:fragmentation:1.3.6'
    api 'me.yokeyword:fragmentation-swipeback:1.3.6'
    //Butterknife
    api 'com.jakewharton:butterknife:' + rootProject.ext.butterknifeVersion
    annotationProcessor 'com.jakewharton:butterknife-compiler:' + rootProject.ext.butterknifeVersion
    //网络请求依赖

    api 'com.squareup.okhttp3:logging-interceptor:3.8.1'//非必要依赖， log依赖，如果需要打印OkHttpLog需要添加
    api 'com.squareup.okhttp3:okhttp:3.10.0'
    /**
     * Rxjava2和Retrofit2
     */
    api "io.reactivex.rxjava2:rxjava:$rootProject.ext.rxjava2Version"// 必要rxjava2依赖
    api 'io.reactivex.rxjava2:rxandroid:'+ rootProject.ext.rxandroid// 必要rxandrroid依赖，切线程时需要用到
    api 'com.squareup.retrofit2:retrofit:2.3.0'// 必要retrofit依赖
    api 'com.squareup.retrofit2:converter-gson:2.3.0'// 必要依赖，解析json字符所用
    api 'com.squareup.retrofit2:adapter-rxjava2:2.3.0' // 必要依赖，和Rxjava结合必须用到，下面会提到
    api 'com.jakewharton:disklrucache:2.0.2'

    //Loader依赖 https://github.com/81813780/AVLoadingIndicatorView
    api 'com.wang.avi:library:2.1.3'
    api 'com.github.bumptech.glide:glide:' + rootProject.ext.glide
    api 'com.github.bumptech.glide:annotations:'+ rootProject.ext.glide
    annotationProcessor 'com.github.bumptech.glide:compiler:'+ rootProject.ext.glide
    //arouter跳转路由
    api 'com.alibaba:arouter-api:1.3.1'
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    // 刷新控件 https://github.com/scwang90/SmartRefreshLayout
    api 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-28'
    // Lifecycle
    implementation "android.arch.lifecycle:common-java8:$rootProject.ext.lifecycleVersion"
    api("com.trello.rxlifecycle2:rxlifecycle:2.2.2") {
        exclude group: 'com.android.support'
    }
    //rx管理View的生命周期
    api("com.trello.rxlifecycle2:rxlifecycle-components:2.2.2") {
        exclude group: 'com.android.support'
    }
    //Google LiveData和ViewModel组件
    api 'android.arch.lifecycle:extensions:1.1.1'
    api 'com.jakewharton.rxbinding2:rxbinding:2.1.1'
    api 'me.tatarka.bindingcollectionadapter2:bindingcollectionadapter:2.2.0'
    api 'me.tatarka.bindingcollectionadapter2:bindingcollectionadapter-recyclerview:2.2.0'
    api 'com.afollestad.material-dialogs:core:0.9.4.5'
    api 'com.afollestad.material-dialogs:commons:0.9.4.5'
    //material-dialogs

    annotationProcessor 'android.arch.lifecycle:compiler:1.1.1'
}
repositories {
    mavenCentral()
}
